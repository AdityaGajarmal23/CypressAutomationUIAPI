{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 14,
    "pending": 0,
    "failures": 1,
    "start": "2024-04-25T14:06:49.742Z",
    "end": "2024-04-25T14:06:58.452Z",
    "duration": 8710,
    "testsRegistered": 15,
    "passPercent": 93.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "226eb9a7-88a4-4907-9113-44facbc17c1a",
      "title": "",
      "fullFile": "cypress/e2e/APITests/APITesting.cy.js",
      "file": "cypress/e2e/APITests/APITesting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2e31417-fb4a-40e6-9053-f40409521f53",
          "title": "Testing of Reqres Site for API Calling",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. GET Request: Send API request and get details for all users from Page 2",
              "fullTitle": "Testing of Reqres Site for API Calling 1. GET Request: Send API request and get details for all users from Page 2",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst page = api.pageID;\nlp.listUsersByPage(page).then(response => {\n  expect(response.status).to.eql(200);\n});",
              "err": {},
              "uuid": "a06defe7-f239-40fa-9e8a-9cd7b34fe9d4",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. GET Request: Send API Request and get Single User details",
              "fullTitle": "Testing of Reqres Site for API Calling 2. GET Request: Send API Request and get Single User details",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst userID = api.pageID;\nlp.getSingleUser(userID).then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body.data.email).to.eql('janet.weaver@reqres.in');\n  cy.log('firstname', response.body.data.first_name);\n  expect(response.body.data.id).to.eq(userID);\n});",
              "err": {},
              "uuid": "4c4d9a84-e020-4618-a80b-7af83662e6d5",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3. GET Request: Sennd API Request for Invalid User Details",
              "fullTitle": "Testing of Reqres Site for API Calling 3. GET Request: Sennd API Request for Invalid User Details",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst userID = api.invalidUserID;\nlp.getSingleUser(userID).then(response => {\n  expect(response.status).to.eql(404);\n  cy.log('Status', response.status);\n  if (response.status === 404) {\n    cy.log('User not found. Considered as a passing scenario.');\n  }\n  ;\n});",
              "err": {},
              "uuid": "7f165714-d3be-4528-83a1-84ccdaca07af",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4. GET Request: Get Unknown Data(List Resource)",
              "fullTitle": "Testing of Reqres Site for API Calling 4. GET Request: Get Unknown Data(List Resource)",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "lp.getUknownUser().then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.data).to.have.length.greaterThan(0);\n});",
              "err": {},
              "uuid": "da8913df-a640-4bd0-b997-b43044255545",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5. GET Request: Get Unknown(Single Resource) by ID",
              "fullTitle": "Testing of Reqres Site for API Calling 5. GET Request: Get Unknown(Single Resource) by ID",
              "timedOut": null,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst unknownId = api.unknownValidID;\nlp.getUnknownById(unknownId).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.data.id).to.eq(unknownId);\n});",
              "err": {},
              "uuid": "459c2869-ca35-4fec-a7cf-f0041fc3bf02",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6. GET Request: Get Unknown(Single Resource NOT FOUND) by ID",
              "fullTitle": "Testing of Reqres Site for API Calling 6. GET Request: Get Unknown(Single Resource NOT FOUND) by ID",
              "timedOut": null,
              "duration": 778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/APITests/APITesting.cy.js/Testing of Reqres Site for API Calling -- 6. GET Request Get Unknown(Single Resource NOT FOUND) by ID (failed) (4).png\"\n      ]\n    ]\n  }\n]",
              "code": "const api = creds.api;\nconst unknownId = api.invalidUserID;\nlp.getUnknownById(unknownId).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body.data).to.eq(undefined);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 401",
                "estack": "AssertionError: expected 404 to equal 401\n    at Context.eval (webpack://cypressautomation/./cypress/e2e/APITests/APITesting.cy.js:75:37)",
                "diff": "- 404\n+ 401\n"
              },
              "uuid": "24b7567d-ea87-417c-b7d3-8e5dc0328a33",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "7. POST Request: Create User with Name and Job",
              "fullTitle": "Testing of Reqres Site for API Calling 7. POST Request: Create User with Name and Job",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst newUser = {\n  name: api.name,\n  job: api.job\n};\nlp.createUser(newUser).then(response => {\n  expect(response.status).to.eql(201);\n  expect(response.body.name).to.eql(newUser.name);\n  expect(response.body.job).to.eql(newUser.job);\n  let createdUserId = response.body.id;\n  // creating a variable and storing the UserID created in localStorage memory\n  window.localStorage.setItem('createdUserId', createdUserId);\n  // Logging the created UserID\n  cy.log('createdUserId', createdUserId);\n});",
              "err": {},
              "uuid": "a374f297-3526-466c-9e65-38756f288e4c",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "8. PUT Request: Update the User Data",
              "fullTitle": "Testing of Reqres Site for API Calling 8. PUT Request: Update the User Data",
              "timedOut": null,
              "duration": 371,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\n// getting the UserID Stored in the LocalStorage Memory\nconst userid = localStorage.getItem('createdUserId');\nconst updateduserData = {\n  name: api.newName,\n  job: api.updatedJob\n};\nlp.updateUser(userid, updateduserData).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log('updatedname', response.body.name);\n  cy.log('updatedjob', response.body.job);\n  expect(response.body.name).to.eql(updateduserData.name);\n  expect(response.body.job).to.eql(updateduserData.job);\n});",
              "err": {},
              "uuid": "09245ffc-18ec-4f4c-b704-ecc4e1a3ecdc",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "9. PATCH Request: Update the User Data",
              "fullTitle": "Testing of Reqres Site for API Calling 9. PATCH Request: Update the User Data",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\n// getting the UserID Stored in the LocalStorage Memory\nconst userid = localStorage.getItem('createdUserId');\nconst updateduserData = {\n  job: api.job\n};\nlp.updateUser(userid, updateduserData).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log('updatedname', response.body.name);\n  cy.log('updatedjob', response.body.job);\n  expect(response.body.name).to.eql(updateduserData.name);\n  expect(response.body.job).to.eql(updateduserData.job);\n});",
              "err": {},
              "uuid": "1b22f9ff-69db-4fd0-b493-4f45f9a56e1e",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "10. Delete Request: Delete User",
              "fullTitle": "Testing of Reqres Site for API Calling 10. Delete Request: Delete User",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const userid = localStorage.getItem('createdUserId');\nlp.deleteUser(userid).then(response => {\n  expect(response.status).to.eql(204);\n});",
              "err": {},
              "uuid": "7f833862-183e-4e51-a8d5-5ae9066008d8",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "11. POST Request: Register Successful",
              "fullTitle": "Testing of Reqres Site for API Calling 11. POST Request: Register Successful",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst newUser = {\n  email: api.email,\n  password: api.password\n};\nlp.registerSuccessfulUser(newUser).then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body).to.have.property('token');\n});",
              "err": {},
              "uuid": "9b4d539a-fd1d-460f-b755-ffe27c48867e",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "12. POST Request: Register Unsuccessful i.e. without Password",
              "fullTitle": "Testing of Reqres Site for API Calling 12. POST Request: Register Unsuccessful i.e. without Password",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst newUser = {\n  email: api.email\n};\nlp.registerSuccessfulUser(newUser).then(response => {\n  expect(response.status).to.eql(400);\n  expect(response.body).to.have.property(\"error\");\n  expect(response.body.error).to.eql(\"Missing password\");\n});",
              "err": {},
              "uuid": "3e9d4166-dd36-4265-b475-6911256725f1",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "13. POST Request: Login Successful",
              "fullTitle": "Testing of Reqres Site for API Calling 13. POST Request: Login Successful",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst newUser = {\n  email: api.email,\n  password: api.password\n};\nlp.userLogin(newUser).then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body).to.have.property(\"token\");\n});",
              "err": {},
              "uuid": "e0f0f365-234f-4b72-9d6c-459ac464e1a3",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "14. POST Request: Login Unsuccessful i.e. without Password",
              "fullTitle": "Testing of Reqres Site for API Calling 14. POST Request: Login Unsuccessful i.e. without Password",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const api = creds.api;\nconst newUser = {\n  email: api.email\n};\nlp.userLogin(newUser).then(response => {\n  expect(response.status).to.eql(400);\n  expect(response.body).to.have.property(\"error\");\n  expect(response.body.error).to.eql(\"Missing password\");\n});",
              "err": {},
              "uuid": "41996f4f-3253-4165-8c2c-1e5f9a6ffb3f",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "15. GET Request: Requesting details from the page with some time delay in seconds",
              "fullTitle": "Testing of Reqres Site for API Calling 15. GET Request: Requesting details from the page with some time delay in seconds",
              "timedOut": null,
              "duration": 4364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/APITests/APITesting.cy.js\"\n}",
              "code": "const delaytime = 4; // in seconds\nlp.delayedResponse(delaytime).then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body).to.have.property('total_pages');\n  expect(response.body).to.have.property('data');\n});",
              "err": {},
              "uuid": "f86b1f8a-9d02-43c0-8a1a-3d03e6afd663",
              "parentUUID": "a2e31417-fb4a-40e6-9053-f40409521f53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a06defe7-f239-40fa-9e8a-9cd7b34fe9d4",
            "4c4d9a84-e020-4618-a80b-7af83662e6d5",
            "7f165714-d3be-4528-83a1-84ccdaca07af",
            "da8913df-a640-4bd0-b997-b43044255545",
            "459c2869-ca35-4fec-a7cf-f0041fc3bf02",
            "a374f297-3526-466c-9e65-38756f288e4c",
            "09245ffc-18ec-4f4c-b704-ecc4e1a3ecdc",
            "1b22f9ff-69db-4fd0-b493-4f45f9a56e1e",
            "7f833862-183e-4e51-a8d5-5ae9066008d8",
            "9b4d539a-fd1d-460f-b755-ffe27c48867e",
            "3e9d4166-dd36-4265-b475-6911256725f1",
            "e0f0f365-234f-4b72-9d6c-459ac464e1a3",
            "41996f4f-3253-4165-8c2c-1e5f9a6ffb3f",
            "f86b1f8a-9d02-43c0-8a1a-3d03e6afd663"
          ],
          "failures": [
            "24b7567d-ea87-417c-b7d3-8e5dc0328a33"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "quiet": true,
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Inline Reporter",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false
      },
      "version": "6.2.0"
    }
  }
}